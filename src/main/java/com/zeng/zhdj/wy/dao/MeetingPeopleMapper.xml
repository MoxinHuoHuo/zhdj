<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zeng.zhdj.wy.dao.MeetingPeopleMapper" >
  <resultMap id="BaseResultMap" type="com.zeng.zhdj.wy.entity.MeetingPeople" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="meeting_id" property="meetingId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="arrive_people" property="arrivePeople" jdbcType="VARCHAR" />
    <result column="arrive_people_phone" property="arrivePeoplePhone" jdbcType="VARCHAR" />
    <result column="arrive_people_id" property="arrivePeopleId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="userMap" type="com.zeng.zhdj.wy.entity.UserMessage">
		
		<result column="tel" property="arrivePeoplePhone" jdbcType="VARCHAR" />
		<result column="user_name" property="arrivePeople" jdbcType="VARCHAR" />

	</resultMap>
	
  <sql id="Base_Column_List" >
    id, meeting_id, arrive_people, arrive_people_phone, type, arrive_people_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from meeting_people
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from meeting_people
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!-- 根据会议id删除人员 -->
   <delete id="deleteByMeetingId" parameterType="java.lang.Integer" >
    delete from meeting_people
    where meeting_id = #{meetId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zeng.zhdj.wy.entity.MeetingPeople" >
    insert into meeting_people (id, meeting_id, arrive_people, 
      arrive_people_phone)
    values (#{id,jdbcType=INTEGER}, #{meetingId,jdbcType=INTEGER}, #{arrivePeople,jdbcType=VARCHAR}, 
      #{arrivePeoplePhone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zeng.zhdj.wy.entity.MeetingPeople" >
    insert into meeting_people
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="meetingId != null" >
        meeting_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="arrivePeople != null" >
        arrive_people,
      </if>
      <if test="arrivePeoplePhone != null" >
        arrive_people_phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="meetingId != null" >
        #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="arrivePeople != null" >
        #{arrivePeople,jdbcType=VARCHAR},
      </if>
      <if test="arrivePeoplePhone != null" >
        #{arrivePeoplePhone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeng.zhdj.wy.entity.MeetingPeople" >
    update meeting_people
    <set >
      <if test="meetingId != null" >
        meeting_id = #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="arrivePeople != null" >
        arrive_people = #{arrivePeople,jdbcType=VARCHAR},
      </if>
      <if test="arrivePeoplePhone != null" >
        arrive_people_phone = #{arrivePeoplePhone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeng.zhdj.wy.entity.MeetingPeople" >
    update meeting_people
    set meeting_id = #{meetingId,jdbcType=INTEGER},
      arrive_people = #{arrivePeople,jdbcType=VARCHAR},
      arrive_people_phone = #{arrivePeoplePhone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 批量插入参会人员 -->
   <insert id="addArrivePeopleBatch" useGeneratedKeys="true" parameterType="java.util.List">  
        <selectKey resultType="long" keyProperty="id" order="AFTER">  
            SELECT  
            LAST_INSERT_ID()  
        </selectKey>  
        insert into meeting_people (meeting_id,arrive_people,arrive_people_phone,type,arrive_people_id,start_time)   
        values  
        <foreach collection="list" item="item" index="index" separator="," >  
            (#{item.meetingId},#{item.arrivePeople},#{item.arrivePeoplePhone},#{item.type},#{item.arrivePeopleId},#{item.startTime})  
        </foreach>  
    </insert>
    <!-- 根据用户id获取用户信息 -->
    <select id="getUserMessageById" parameterType="int" resultMap="userMap">
    	select tel,user_name
    	from user
    	where user_id =  #{userId}
    </select>
</mapper>