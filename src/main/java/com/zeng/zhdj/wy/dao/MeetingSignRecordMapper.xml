<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zeng.zhdj.wy.dao.MeetingSignRecordMapper" >
  <resultMap id="BaseResultMap" type="com.zeng.zhdj.wy.entity.MeetingSignRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="meeting_id" property="meetingId" jdbcType="INTEGER" />
    <result column="sign_people" property="signPeople" jdbcType="VARCHAR" />
    <result column="sign_people_phone" property="signPeoplePhone" jdbcType="VARCHAR" />
    <result column="sign_start_time" property="signStartTime" jdbcType="TIMESTAMP" />
    <result column="sign_end_time" property="signEndTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, meeting_id, sign_people, sign_people_phone, sign_start_time, sign_end_time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from meeting_sign
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from meeting_sign
    where id = #{id,jdbcType=INTEGER}
  </delete>
 
  <select id="selectBy" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from meeting_sign
    where meeting_id = #{meetId,jdbcType=INTEGER}
  </select>
  <delete id="deleteBymeetPeople" parameterType="java.lang.Integer" >
    delete from meeting_sign
    where meeting_id = #{meetingId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zeng.zhdj.wy.entity.MeetingSignRecord" >
    insert into meeting_sign (id, meeting_id, sign_people, 
      sign_people_phone, sign_start_time, sign_end_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{meetingId,jdbcType=INTEGER}, #{signPeople,jdbcType=VARCHAR}, 
      #{signPeoplePhone,jdbcType=VARCHAR}, #{signStartTime,jdbcType=TIMESTAMP}, #{signEndTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zeng.zhdj.wy.entity.MeetingSignRecord" >
    insert into meeting_sign
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="meetingId != null" >
        meeting_id,
      </if>
      <if test="signPeople != null" >
        sign_people,
      </if>
      <if test="signPeoplePhone != null" >
        sign_people_phone,
      </if>
      <if test="signStartTime != null" >
        sign_start_time,
      </if>
      <if test="signEndTime != null" >
        sign_end_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="meetingId != null" >
        #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="signPeople != null" >
        #{signPeople,jdbcType=VARCHAR},
      </if>
      <if test="signPeoplePhone != null" >
        #{signPeoplePhone,jdbcType=VARCHAR},
      </if>
      <if test="signStartTime != null" >
        #{signStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signEndTime != null" >
        #{signEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByMeetingIdSelective" parameterType="com.zeng.zhdj.wy.entity.MeetingSignRecord" >
    update meeting_sign
    <set >
      <if test="signStartTime != null" >
        sign_start_time = #{signStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signEndTime != null" >
        sign_end_time = #{signEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where meeting_id = #{meetingId,jdbcType=INTEGER} and sign_people_phone = #{signPeoplePhone,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeng.zhdj.wy.entity.MeetingSignRecord" >
    update meeting_sign
    set meeting_id = #{meetingId,jdbcType=INTEGER},
      sign_people = #{signPeople,jdbcType=VARCHAR},
      sign_people_phone = #{signPeoplePhone,jdbcType=VARCHAR},
      sign_start_time = #{signStartTime,jdbcType=TIMESTAMP},
      sign_end_time = #{signEndTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据用户手机号码查询签到情况 -->
  <select id="selectByUserId" parameterType="map" resultMap="BaseResultMap">
  	select *
  	from meeting_sign
  	where 
  	 sign_people_phone = #{signPeoplePhone} and status = 1  and DATE_FORMAT(start_time,'%Y') = #{time1} 

  </select>
  <!-- 根据会议id查询签到情况 -->
  <select id="getSignRecordByMeetingId" parameterType="map" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from meeting_sign
    where meeting_id = #{meetingId,jdbcType=INTEGER}
    limit #{start},#{pagesize}
  </select>
  <!-- 根据会议id获取签到次数 -->
  <select id="getSignRecordCount" parameterType="int" resultType="int">
  	select count(*)
  	from meeting_sign
  	where meeting_id = #{meetingId,jdbcType=INTEGER}
  </select>
  <!-- 批量插入参会人员 -->
   <insert id="addSignPeopleBatch"  parameterType="java.util.List">  
        insert into meeting_sign (meeting_id,sign_people,sign_people_phone,status,type,start_time)   
        values  
        <foreach collection="list" item="item" index="index" separator="," >  
            (#{item.meetingId},#{item.signPeople},#{item.signPeoplePhone},#{item.status},#{item.type},#{item.startTime})  
        </foreach>  
    </insert>
</mapper>